// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}


model User {
  id             String   @default(cuid()) @id
  name       String?
  email          String?   @unique
  role           String?
  action         Boolean?
  address        String?
  emailVerified  String?
  phone          String?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  accounts Account[]
  products Product[]
  transaction Transaction[]
}

model Account {
  id                String  @default(cuid()) @id
  userId            String  
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? 
  access_token      String? 
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Product {
  id String @default(cuid()) @id
  userId String
  title String?
  image String?
  description String?
  price BigInt?
  stock Int?
  created_at DateTime

  transaction Transaction[]

  user User @relation(fields: [userId], references: [id],onDelete: Cascade)
}

model Transaction {
  id String @default(cuid()) @id
  userId String
  productId String
  status String?
  date DateTime @default(now())
  amount Int?
  totalPrice BigInt?

  user User @relation(fields: [userId], references: [id],onDelete: Cascade)
  product Product @relation(fields: [productId],references: [id],onDelete: Cascade)
}